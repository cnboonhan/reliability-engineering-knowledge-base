apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: psql-tuning-onboarding
message: |-
  The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.
         Username: ${POSTGRESQL_USER}
         Password: ${POSTGRESQL_PASSWORD}
    Database Name: ${POSTGRESQL_DATABASE}
   Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/
metadata:
  annotations:
    description: |-
      Onboarding for Database Tuning Exercises
    tags: database,postgresql
  labels:
    samples.operator.openshift.io/managed: "true"
  name: psql-tuning-onboarding
  namespace: psql-tuning

objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata: 
      name: ${DATABASE_SERVICE_NAME}-config
    data:
      postgresql.conf: |
        shared_buffers = '56B'
        log_directory = 'pg_log'
        log_filename = 'postgresql.log'
        logging_collector = 'on'
        listen_addresses = '*'
        max_connections = 100
        max_prepared_transactions = 0
        shared_buffers = 256MB
        effective_cache_size = 256MB
        log_line_prefix = '%t [%p]: [%l-1] '
        log_statement = 'all'
        log_min_duration_statement = 0
        log_checkpoints = on
        log_connections = on
        log_disconnections = on
        log_lock_waits = on
        log_temp_files = 0
        log_autovacuum_min_duration = 0

  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: "{.data['database-name']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-username: "{.data['database-user']}"
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${POSTGRESQL_DATABASE}
      database-password: ${POSTGRESQL_PASSWORD}
      database-user: ${POSTGRESQL_USER}

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
        - name: postgresql
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
            - capabilities: {}
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${DATABASE_SERVICE_NAME}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${DATABASE_SERVICE_NAME}
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${DATABASE_SERVICE_NAME}
              image: " "
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                    - --live
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                initialDelaySeconds: 5
                timeoutSeconds: 1
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: ${DATABASE_SERVICE_NAME}-data
                - mountPath: /var/lib/pgsql/data/userdata/postgresql.conf
                  subPath: postgresql.conf
                  name: ${DATABASE_SERVICE_NAME}-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - name: ${DATABASE_SERVICE_NAME}-data
              persistentVolumeClaim:
                claimName: ${DATABASE_SERVICE_NAME}
            - name: ${DATABASE_SERVICE_NAME}-config
              configMap:
                name: ${DATABASE_SERVICE_NAME}-config
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:${POSTGRESQL_VERSION}
              namespace: ${NAMESPACE}
            lastTriggeredImage: ""
          type: ImageChange
        - type: ConfigChange
    status: {}

  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: psql-tuning 
      namespace: psql-tuning

  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: psql-tuning-build
      labels:
        app: psql-tuning-build
    spec:
      source:
        type: binary
        binary: {}
      strategy:
        type: docker
        dockerStrategy:
          dockerfilePath: Dockerfile
      output:
        to:
          kind: ImageStreamTag
          name: psql-tuning:latest
          namespace: psql-tuning
      triggers:
        - type: ImageChange

parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the database.
    displayName: PostgreSQL Connection Username
    value: postgres
    name: POSTGRESQL_USER
    required: true
  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    value: postgres
    name: POSTGRESQL_PASSWORD
    required: true
  - description: Name of the PostgreSQL database accessed.
    displayName: PostgreSQL Database Name
    name: POSTGRESQL_DATABASE
    required: true
    value: postgres
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Version of PostgreSQL image to be used (10-el7, 10-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 10-el8
